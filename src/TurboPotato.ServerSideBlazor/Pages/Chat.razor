@page "/chat"

@using TurboPotato.ServerSideBlazor.Data
@using System.Net.Http
@using Jil

@inject InMemoryChatMessageRepository ChatMessageRepository
@inject IHttpClientFactory HttpClientFactory

<h1>Chat</h1>

<h2>Username</h2>
<input type="text" />

<br />

<h2>Chat activity</h2>
<div>
    <!-- TODO: show chat messages here -->
</div>

<br />

<h2>Enter message</h2>
<input type="text" />
<button>Send</button>

@functions {
    private HttpClient httpClient;

    private const string ApiEndpoint = "https://localhost:5001/api";

    public IReadOnlyList<ChatMessage> ChatMessages { get; set; }

    protected override async Task OnInitAsync()
    {
        ChatMessages = Array.Empty<ChatMessage>();

        httpClient = HttpClientFactory.CreateClient();

        while (true)
        {
            ChatMessages = await GetMessagesAsync();
            StateHasChanged();

            await Task.Delay(1000);
        }
    }

    private async Task AddChatMessageAsync(string username, string message)
    {
        var messageObject = new ChatMessage()
        {
            Message = message,
            From = username,
            SentAtUtc = DateTime.UtcNow
        };

        var json = JSON.Serialize(messageObject);
        await httpClient.PutAsync(ApiEndpoint, new StringContent(json));
    }

    private async Task<IReadOnlyList<ChatMessage>> GetMessagesAsync()
    {
        var json = await httpClient.GetStringAsync(ApiEndpoint);
        return JSON.Deserialize<ChatMessage[]>(json);
    }

}